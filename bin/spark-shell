#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Determine the current working directory
_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# Preserve the calling directory
_CALLING_DIR="$(pwd)"

# Load some functions to instal some applications
. ${_DIR}/../thirdparty/install.sh

# Determine the Spark version from the root pom.xml file and
# install Spark under the bin/ folder if needed.
install_spark() {
  local SPARK_VERSION=`grep "<spark.version>" "${_DIR}/../pom.xml" | head -n1 | awk -F '[<>]' '{print $3}'`
  local HADOOP_VERSION=`grep "<hadoop.version>" "${_DIR}/../pom.xml" | head -n1 | awk -F '[<>]' '{print $3}'`
  local SPARK_DIR="${_DIR}/spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}"
  local APACHE_MIRROR=${APACHE_MIRROR:-'http://d3kbcqa49mib13.cloudfront.net'}

  install_app \
    "${APACHE_MIRROR}" \
    "spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz" \
    "spark-${SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}/bin/spark-shell"

  # Check and resolve a protobuf version issue;
  # aws-kinesis-client-1.7+ requires protobuf-java-2.6+ though, spark-2.0.x depends on protobuf-java-2.5.
  local PROTOBUF_VERSION=`grep "<protobuf.version>" "${_DIR}/../pom.xml" | head -n1 | awk -F '[<>]' '{print $3}'`
  local PROTOBUF_DETECTED_BIN=`ls ${SPARK_DIR}/jars | grep -E 'protobuf-java-[0-9\.]*\.jar'`
  local PROTOBUF_DETECTED_VERSION=`echo ${PROTOBUF_DETECTED_BIN} | awk 'match($0, /[0-9]+\.[0-9]+\.[0-9]+/) {print substr($0, RSTART, RLENGTH)}'`
  # See simple version normalization: http://stackoverflow.com/questions/16989598/bash-comparing-version-numbers
  function version { echo "$@" | awk -F. '{ printf("%03d%03d%03d\n", $1,$2,$3); }'; }
  if [ $(version $PROTOBUF_DETECTED_VERSION) -lt $(version $PROTOBUF_VERSION) ]; then
    local MAVEN_CENTRAL_URL="http://central.maven.org/maven2"
    local PROTOBUF_BIN="protobuf-java-${PROTOBUF_VERSION}.jar"
    local PROTOBUF_URL="${MAVEN_CENTRAL_URL}/com/google/protobuf/protobuf-java/${PROTOBUF_VERSION}/${PROTOBUF_BIN}"

    echo "Replacing ${PROTOBUF_DETECTED_BIN} with ${PROTOBUF_BIN} to resolve a kinesis client protobuf dependency" 1>&2

    download_app "${PROTOBUF_URL}" "${PROTOBUF_BIN}"
    rm "${SPARK_DIR}/jars/${PROTOBUF_DETECTED_BIN}" && mv "${PROTOBUF_BIN}" "${SPARK_DIR}/jars/"
  fi

  SPARK_BIN="${SPARK_DIR}/bin/spark-shell"
}

# Install the proper version of Spark for launching spark-shell
install_spark

# Reset the current working directory
cd "${_CALLING_DIR}"

echo "Using \`spark-shell\` from path: $SPARK_BIN" 1>&2

# Last, call the `spark-shell` command as usual
${SPARK_BIN} --properties-file ${_DIR}/../conf/spark-defaults.conf "$@"

